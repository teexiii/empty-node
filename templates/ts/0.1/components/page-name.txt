import type { ReactNode } from 'react';
import React, { useEffect, useState } from 'react';

import { useListener } from '@/components/context/ListenerProvider';

interface IPage@@PAGE_FILE_NAME {
    children?: ReactNode;
}

const Page@@PAGE_FILE_NAME = (props: IPage@@PAGE_FILE_NAME) => {

    const listener = useListener();

    const onListen = (e: any) => {
        const { type } = e;
        switch (type) {
            case '':
                break;

            default:
                break;
        }
    };

    if (listener) {
        listener.useSubscription((e: any) => {
            onListen(e);
        });
    }

    const init = async () => {
        //
    };

    useEffect(() => {
        // effect
        return () => {
            // cleanup
        };
    }, []);

    return (
        <>
            {props.children}
        </>
    );
};

Page@@PAGE_FILE_NAME.propTypes = {};

export default Page@@PAGE_FILE_NAME;
